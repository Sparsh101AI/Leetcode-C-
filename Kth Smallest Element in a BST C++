/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {                                          //idea is to traverse tree store in vec and use indexth tp return elements!
    vector<int> holder;
public:
    int kthSmallest(TreeNode* root, int k) {
        travel(root);
        sort(holder.begin(), holder.end());
        return holder[k-1];

    }


    void travel (TreeNode* &root){
        if(!root) return;
            travel(root->left);
            holder.push_back(root->val);
            travel(root->right);
        
          
    }
};
